version: '3.8'

services:
  redis:
    image: redis:alpine
  api:
    container_name: postagram_api
    build: .
    restart: always
    env_file: .env
    expose:  # new
      - 8000
    command: >
      sh -c "python manage.py migrate --no-input && gunicorn CoreRoot.wsgi:application --bind 0.0.0.0:8000"
    volumes:
     - .:/app
     - uploads_volume:/app/uploads
    depends_on:
     - db
     - redis
    labels: # new
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django-traefik.demoproject.blog`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
  db:
    container_name: postagram_db
    image: postgres:14.3-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432

  traefik:  # new
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard-django-traefik.demoproject.blog`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"
      
volumes:
  uploads_volume:
  postgres_data: